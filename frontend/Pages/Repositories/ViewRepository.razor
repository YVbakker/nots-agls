@page "/repositories/{Id:int}"

<PageTitle>View Repository #@Id | AGLS</PageTitle>

@inject IViewRepositoryViewModel _viewModel;
@inject IListCommitsViewModel _commitsViewModel;
@inject NavigationManager _navigation;

<div class="row my-3">
    <nav aria-label="breadcrumb" class="d-flex flex-row justify-content-between align-items-center">
        <ol class="breadcrumb m-0">
            <li class="breadcrumb-item">
                <a href="/">Home</a>
            </li>
            <li class="breadcrumb-item" aria-current="page">
                <a href="/repositories">
                    Repositories
                </a>
            </li>
            <li class="breadcrumb-item active" aria-current="page">View #@Id</li>
        </ol>
        <a href="/repositories" class="btn btn-sm btn-primary py-1 btn-lg fw-bold">
            BACK <span class="oi oi-caret-left ps-1"></span>
        </a>
    </nav>
</div>

<div class="container">
    <h1 class="text-primary">@_viewModel.Repository.Naam</h1>

    <div>
        <a href="@_viewModel.Repository.Url" target="_blank" rel="noopener noreferrer">
            @_viewModel.Repository.Url
        </a>
    </div>

    <div class="table-responsive">
        <table class="table">
            <thead>
            <tr>
                <th>hash</th>
                <th>date / time</th>
                <th>Message</th>
            </tr>
            </thead>
            <tbody>
            @foreach (var commit in _commitsViewModel.Commits)
            {
                <tr>
                    <td>@commit.Hash</td>
                    <td>@commit.Date</td>
                    <td>@commit.Message</td>
                </tr>
            }
            </tbody>
        </table>
    </div>
</div>

@code {

    [Parameter]
    public int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await _viewModel.LoadRepositoryAsync(Id);
        await _commitsViewModel.FetchCommitsForRepoAsync(Id);
    }

}