@page "/datasets/{id:int}"

<PageTitle>Edit Dataset #@id | AGLS</PageTitle>

@inject DatasetService DatasetService
@inject RepositoryService RepositoryService
@inject KeywordService KeywordService
@inject NavigationManager NavManager


<div class="row my-3">
    <nav aria-label="breadcrumb" class="d-flex flex-row justify-content-between align-items-center">
        <ol class="breadcrumb m-0">
            <li class="breadcrumb-item">
                <a href="/">Home</a>
            </li>
            <li class="breadcrumb-item" aria-current="page">
                <a href="/datasets">
                    Datasets
                </a>
            </li>
            <li class="breadcrumb-item active" aria-current="page">Edit #@id</li>
        </ol>
        <a href="/datasets" class="btn btn-sm btn-primary py-1 btn-lg fw-bold">
            BACK <span class="oi oi-caret-left ps-1"></span>
        </a>
    </nav>
</div>

@if (dataset == null)
{
    <div class="spinner-border text-primary" role="status">
        <span class="visually-hidden">Loading...</span>
    </div>
}
else
{
    <div class="container form-container">
        <div>
            <label for="inputDatasetId" class="form-label">Id</label>
            <input type="text" class="form-control" id="inputDatasetId" disabled @bind="dataset.Id">
        </div>

        <div>
            <label for="inputDatasetName" class="form-label">Name</label>
            <input type="text" class="form-control" id="inputDatasetName" @bind="dataset.Name">
        </div>

        <div class="d-flex justify-content-between">
            <label class="form-label">Labeled Data</label>
            <button @onclick="() => modal.Open()" type="button" class="btn btn-sm btn-success">
                <span class="oi oi-list-rich me-1"></span>
                Generate labeled data
            </button>
            <GeneratorModal @ref="modal"></GeneratorModal>
        </div>

        @if (errorMessage != null)
        {
            <div class="alert alert-danger p-2" role="alert">
                <span class="oi oi-warning"></span> @errorMessage
            </div>
        }

        @if (successMessage != null)
        {
            <div class="alert alert-success p-2" role="alert">
                <span class="oi oi-warning"></span> @successMessage
            </div>
        }

        <div class="d-grid mt-2">
            <button type="button" class="btn btn-sm btn-primary" @onclick="handleEdit">
                Save changes
            </button>
        </div>
        
        <div class="table-responsive">
            <table class="table">
                <thead>
                <tr>
                    <th>
                        <span class="test-classs">id</span>
                    </th>
                    <th>string</th>
                    <th>matched keyword</th>
                    <th>useful</th>
                    <th class="actions">
                        actions
                    </th>
                </tr>
                </thead>
                <tbody>

                </tbody>
            </table>
        </div>
    </div>
}

@code
{
    [Parameter]
    public int id { get; set; }

    private GeneratorModal modal { get; set; }

    // Form data
    private List<Repository>? gitRepositories { get; set; }
    private List<KeywordSet>? keywordSets { get; set; }

    private Dataset? dataset { get; set; }
    private string? successMessage { get; set; }
    private string? errorMessage { get; set; }

    private async void handleEdit()
    {
        var datasetDto = new DatasetDto();
        datasetDto.Name = dataset?.Name;
        var response = await DatasetService.Update(id, datasetDto);

        if (((int) response.StatusCode) == 200)
        {
            successMessage = "Saved!";
            StateHasChanged();
        }
        else
        {
            errorMessage = "Error editing keyword!";
            StateHasChanged();
        }
    }

    protected override async Task OnInitializedAsync()
    {
        gitRepositories = await RepositoryService.Get();
        keywordSets = await KeywordService.Get(); // TODO: Replace with KeywordSetService
        dataset = await DatasetService.GetById(id);
    }
}