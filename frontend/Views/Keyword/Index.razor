@page "/keywords"

<PageTitle>Keywords</PageTitle>

@using frontend.Models
@inject KeywordService KeywordService

<div class="row mt-3">
    <nav aria-label="breadcrumb">
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a href="/">Home</a></li>
            <li class="breadcrumb-item" aria-current="page">Keywords</li>
            <li class="breadcrumb-item active" aria-current="page">View All</li>
        </ol>
    </nav>
</div>

<div class="row">
    <div class="table-responsive">

        <table class="table">
            <thead>
                <tr>
                    <th>id</th>
                    <th>name</th>
                    <th>creation date</th>
                    <th>modified date</th>
                    <th class="w-10">
                        <a href="/keywords/create" class="btn btn-success btn-sm float-end mx-1">
                            <span class="oi oi-plus"></span>
                        </a>
                    </th>
                </tr>
            </thead>
            <tbody>
                @if (keywords == null)
                {
                    <p><em>Loading...</em></p>
                }
                else
                    @foreach (var keyword in keywords)
                    {
                        <tr>
                            <td>@keyword.Id</td>
                            <td>@keyword.Name</td>
                            <td>@keyword.CreatedDate</td>
                            <td>@keyword.UpdatedDate</td>
                            <td>
                                <div class="d-flex flex-row-reverse">

                                    <button class="btn btn-danger btn-sm mx-1" @onclick="() => handleDelete(keyword.Id)">
                                        <span class="oi oi-trash"></span>
                                    </button>
                                    <a href="/keyword/@keyword.Id" class="btn btn-warning btn-sm mx-1">
                                        <span class="oi oi-pencil"></span>
                                    </a>
                                </div>
                            </td>
                        </tr>
                    }
            </tbody>
        </table>
    </div>
</div>

@code
{
    private List<Keyword>? keywords { get; set; }

    private async void handleDelete(int id)
    {
        var response = await KeywordService.Delete(id);

        if (((int)response.StatusCode) == 200)
        {
            keywords = await KeywordService.Get();
            StateHasChanged();
        }
    }

    protected override async Task OnInitializedAsync()
    {
        keywords = await KeywordService.Get();
    }
}